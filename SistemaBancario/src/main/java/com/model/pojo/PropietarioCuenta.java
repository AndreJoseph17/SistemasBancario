package com.model.pojo;
// Generated 18/07/2017 22:58:48 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PropietarioCuenta generated by hbm2java
 */
@Entity
@Table(name="propietario_cuenta"
    ,catalog="bancodb"
)
public class PropietarioCuenta  implements java.io.Serializable {


     private String idusuario;
     private String nombre;
     private String apellido;
     private Date fechaNacimiento;
     private String login;
     private String password;
     private Set<Telefono> telefonos = new HashSet<Telefono>(0);
     private Set<Email> emails = new HashSet<Email>(0);
     private Set<Email> emails_1 = new HashSet<Email>(0);
     private Set<Cuenta> cuentas = new HashSet<Cuenta>(0);

    public PropietarioCuenta() {
    }

	
    public PropietarioCuenta(String idusuario) {
        this.idusuario = idusuario;
    }
    public PropietarioCuenta(String idusuario, String nombre, String apellido, Date fechaNacimiento, String login, String password, Set<Telefono> telefonos, Set<Email> emails, Set<Email> emails_1, Set<Cuenta> cuentas) {
       this.idusuario = idusuario;
       this.nombre = nombre;
       this.apellido = apellido;
       this.fechaNacimiento = fechaNacimiento;
       this.login = login;
       this.password = password;
       this.telefonos = telefonos;
       this.emails = emails;
       this.emails_1 = emails_1;
       this.cuentas = cuentas;
    }
   
     @Id 

    
    @Column(name="idusuario", unique=true, nullable=false, length=10)
    public String getIdusuario() {
        return this.idusuario;
    }
    
    public void setIdusuario(String idusuario) {
        this.idusuario = idusuario;
    }

    
    @Column(name="nombre", length=45)
    public String getNombre() {
        return this.nombre;
    }
    
    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    
    @Column(name="apellido", length=45)
    public String getApellido() {
        return this.apellido;
    }
    
    public void setApellido(String apellido) {
        this.apellido = apellido;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="fecha_nacimiento", length=10)
    public Date getFechaNacimiento() {
        return this.fechaNacimiento;
    }
    
    public void setFechaNacimiento(Date fechaNacimiento) {
        this.fechaNacimiento = fechaNacimiento;
    }

    
    @Column(name="login", length=20)
    public String getLogin() {
        return this.login;
    }
    
    public void setLogin(String login) {
        this.login = login;
    }

    
    @Column(name="password", length=45)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="propietarioCuenta")
    public Set<Telefono> getTelefonos() {
        return this.telefonos;
    }
    
    public void setTelefonos(Set<Telefono> telefonos) {
        this.telefonos = telefonos;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="usuario_has_email", catalog="bancodb", joinColumns = { 
        @JoinColumn(name="usuario_idusuario", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="email_idemail", nullable=false, updatable=false) })
    public Set<Email> getEmails() {
        return this.emails;
    }
    
    public void setEmails(Set<Email> emails) {
        this.emails = emails;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="propietarioCuenta")
    public Set<Email> getEmails_1() {
        return this.emails_1;
    }
    
    public void setEmails_1(Set<Email> emails_1) {
        this.emails_1 = emails_1;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="propietarioCuenta")
    public Set<Cuenta> getCuentas() {
        return this.cuentas;
    }
    
    public void setCuentas(Set<Cuenta> cuentas) {
        this.cuentas = cuentas;
    }




}


